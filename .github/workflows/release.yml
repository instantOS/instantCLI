name: Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    name: Build release artifacts
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest
      options: --privileged
    env:
      CARGO_TERM_COLOR: always
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Initialise pacman
        run: |
          pacman-key --init
          pacman-key --populate archlinux
          pacman -Syu --noconfirm

      - name: Install build dependencies
        run: |
          pacman -S --noconfirm --needed base-devel git rust pkgconf openssl

      - name: Create build user
        run: |
          useradd -m builder
          chown -R builder:builder "$PWD"

      - name: Extract version
        id: vars
        run: echo "version=${GITHUB_REF_NAME#v}" >> "$GITHUB_OUTPUT"

      - name: Run tests
        run: |
          WORKSPACE="$PWD"
          su builder -c "cd '$WORKSPACE' && CARGO_TERM_COLOR=always cargo test --locked"

      - name: Build release binary
        run: |
          WORKSPACE="$PWD"
          su builder -c "cd '$WORKSPACE' && CARGO_TERM_COLOR=always cargo build --release --locked"

      - name: Strip binary
        run: |
          WORKSPACE="$PWD"
          su builder -c "cd '$WORKSPACE' && strip target/release/instant"

      - name: Build pacman package
        env:
          VERSION: ${{ steps.vars.outputs.version }}
        run: |
          WORKSPACE="$PWD"
          su builder -c "cd '$WORKSPACE/packaging' && VERSION='${VERSION}' makepkg --clean --cleanbuild --force --noconfirm"

      - name: Collect artifacts
        env:
          VERSION: ${{ steps.vars.outputs.version }}
        run: |
          mkdir -p artifacts
          install -Dm0755 "target/release/instant" "artifacts/instant-${VERSION}-x86_64-unknown-linux-gnu"
          shopt -s nullglob
          for pkg in packaging/*.pkg.tar.zst; do mv "$pkg" artifacts/; done
          for src in packaging/*.src.tar.zst; do mv "$src" artifacts/; done

      - name: Upload compiled binary
        uses: actions/upload-artifact@v4
        with:
          name: instant-${{ steps.vars.outputs.version }}-x86_64-unknown-linux-gnu
          path: artifacts/instant-${{ steps.vars.outputs.version }}-x86_64-unknown-linux-gnu

      - name: Upload Arch package
        uses: actions/upload-artifact@v4
        with:
          name: instant-${{ steps.vars.outputs.version }}-arch-packages
          path: |
            artifacts/*.pkg.tar.zst
            artifacts/*.src.tar.zst

  release:
    name: Publish GitHub release
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true

      - name: Publish release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
